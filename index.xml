<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Non Impediti Ratione Cogitationis</title>
    <link>https://icub3d.github.io/</link>
    <description>Recent content on Non Impediti Ratione Cogitationis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Mar 2016 13:32:09 -0600</lastBuildDate>
    
	<atom:link href="https://icub3d.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Private Networks and Nginx</title>
      <link>https://icub3d.github.io/post/private-networks-nginx/</link>
      <pubDate>Thu, 10 Mar 2016 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/private-networks-nginx/</guid>
      <description>Last time, I discussed setting up OpenVPN so I could access the systems on my home network remotely. One of the systems I use is nginx. I use it primarily as a reverse proxy to my others systems (gogs, drone, etc). The reasoning behind this is that I can use nginx as a sort of TLS termination proxy to all of my others systems. This way I only have to manage my certificates in one place.</description>
    </item>
    
    <item>
      <title>Securing Your Connection With OpenVPN</title>
      <link>https://icub3d.github.io/post/private-dev-vpn/</link>
      <pubDate>Fri, 19 Feb 2016 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/private-dev-vpn/</guid>
      <description>Recently, I wanted to setup a private development environment for my home. Public places like slack, github, etc. are great for open source development and enterprise teams. It can be expensive to pay for some of their services though if you are on a small team or do side work here and there. For me, spending a few hundred dollars on a cheap computer (I went with a NUC), allowed me to setup all the services I needed for a small team that would quickly pay for itself.</description>
    </item>
    
    <item>
      <title>Installing UniFi Controller on Arch Linux | ARM</title>
      <link>https://icub3d.github.io/post/unifi-controller-arch-linux-arm/</link>
      <pubDate>Thu, 28 Jan 2016 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/unifi-controller-arch-linux-arm/</guid>
      <description>I realize that the subject by itself seems to limit the interested audience of this post significantly. It took some tweaks to get the UniFi Controller from Ubiquiti working on Arch Linux | ARM though and I wanted to get it out there, if only just for me.
I&amp;rsquo;m going to presume you already have Arch Linux running on ARM. I used a Raspberry Pi 2, so your packages/mileage may vary if you are following these instructions elsewhere.</description>
    </item>
    
    <item>
      <title>Go I/O is Fun*!</title>
      <link>https://icub3d.github.io/post/go-io/</link>
      <pubDate>Sat, 25 Jan 2014 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/go-io/</guid>
      <description>* For certain definitions of fun.
One of my favorite parts of Go is the interface type. There has been sufficient hate recently about the missing generics but, to be honest, I haven&amp;rsquo;t missed them one bit. One of the reasons I haven&amp;rsquo;t missed them is the use of interfaces in go, especially in the standard library. The io package is a great example.
Whether you open a file, read from a network, or request a web page, they all implement the io.</description>
    </item>
    
    <item>
      <title>Dynamic Server Management With Doozer and Groupcache</title>
      <link>https://icub3d.github.io/post/doozer-groupcache/</link>
      <pubDate>Sat, 16 Nov 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/doozer-groupcache/</guid>
      <description>Groupcache, while not a complete replacement for memcached, is an amazing caching library. In just a few lines of code, you can greatly improve the access time to your immutable data. One of the problems many people quickly run into when using groupcache is maintaining a list of peers where the cached data is distributed.
Using a configuration file is a fairly brittle method for maintaining the list. Fortunately, this isn&amp;rsquo;t a new problem.</description>
    </item>
    
    <item>
      <title>Hosting Your Own Godoc</title>
      <link>https://icub3d.github.io/post/godoc-systemd/</link>
      <pubDate>Mon, 20 May 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/godoc-systemd/</guid>
      <description>One of the biggest reasons to use Go is its great tooling. Godoc is one of those tools and it makes documentation so simple that you&amp;rsquo;ll be wanting to document your code instead of dreading it. Besides having a command line interface for displaying documentation, it can also start an HTTP Server. Golang.org is a public version of this for the standard packages. GoDoc does a similar thing for public packages.</description>
    </item>
    
    <item>
      <title>Don&#39;t Reinvent the Wheel</title>
      <link>https://icub3d.github.io/post/dont-reinvent-the-wheel/</link>
      <pubDate>Sun, 05 May 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/dont-reinvent-the-wheel/</guid>
      <description>This last week, I had the opportunity to attend the OpenWest conference. I can&amp;rsquo;t say enough about how amazing it was. If you have the opportunity next year to attend, you should definitely do it! During the conference, I was able to present on some of my recent blog posts. I was also able to attend a session and a keynote from Rasmus Lerdorf and many other really smart people. I felt like everyone came together with a common goal of sharing the knowledge they had and learning from the experience of others.</description>
    </item>
    
    <item>
      <title>Hardcore Google - RESTful Communication With AngularJS</title>
      <link>https://icub3d.github.io/post/hardcore-google-communicating-angularjs/</link>
      <pubDate>Tue, 12 Mar 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/hardcore-google-communicating-angularjs/</guid>
      <description>This post is part of a series Hardcore Google. You can find other posts here:
 Unit Testing App Engine RESTful Web Services In Go RESTful Communication With AngularJS  My history with JavaScript goes back almost 15 years. Back then, working in the browser was was difficult. Eventually tools like jQuery came around and made the work somewhat simpler. It wasn&amp;rsquo;t until I discovered AngularJS though that I felt like JavaScript development had come out of adolescence.</description>
    </item>
    
    <item>
      <title>Hardcore Google - RESTful Web Services In Go</title>
      <link>https://icub3d.github.io/post/hardcore-google-communicating-go/</link>
      <pubDate>Sat, 16 Feb 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/hardcore-google-communicating-go/</guid>
      <description>This post is part of a series Hardcore Google. You can find other posts here:
 Unit Testing App Engine RESTful Web Services In Go RESTful Communication With AngularJS  When you first start developing a web application, one of the first big decision you make after choosing your tool set is how these tools will interact with each other. For my project, I had already chosen Go for my back-end, AngularJS for by front-end, and Google App Engine to host it all.</description>
    </item>
    
    <item>
      <title>Hardcore Google - Unit Testing App Engine</title>
      <link>https://icub3d.github.io/post/hardcore-google-unit-testing/</link>
      <pubDate>Sun, 10 Feb 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/hardcore-google-unit-testing/</guid>
      <description>This post is part of a series Hardcore Google. You can find other posts here:
 Unit Testing App Engine RESTful Web Services In Go RESTful Communication With AngularJS  I recently began a project using Go, AngularJS, and Google App Engine. It is a personal web site I use at home to help keep my family organized. I&amp;rsquo;ll talk more about it later in a series of posts. I&amp;rsquo;m not actually completely finished with it yet, but I thought I&amp;rsquo;d start this series.</description>
    </item>
    
    <item>
      <title>Cross Compiling Go Applications</title>
      <link>https://icub3d.github.io/post/go-cross-compilers-linux/</link>
      <pubDate>Thu, 31 Jan 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/go-cross-compilers-linux/</guid>
      <description>In a recent discussion on Go&amp;rsquo;s Google Plus Community, some questions came up about cross compiling. In a default installation of Go, cross compiling is not enabled. It only builds to toolchains for your current operating system and architecture. Since all of my computers are amd64, but some of the applications I build need to run on i386, I thought I&amp;rsquo;d share how I go about doing it.
I use Arch linux, so I have provided a package in AUR for doing this.</description>
    </item>
    
    <item>
      <title>Colds, Static Blogs, and Go</title>
      <link>https://icub3d.github.io/post/goblog/</link>
      <pubDate>Tue, 29 Jan 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/goblog/</guid>
      <description>Last week in my local Linux user group mailing list the topic of static blogging came up. I had been thinking of converting my blog over, but wasn&amp;rsquo;t sure which one I&amp;rsquo;d prefer to use. One of the responses to my inquiry was:
 If you&amp;rsquo;ve been looking for a project with which to learn a new language, writing your own blog engine is a reasonable choice. The &amp;lsquo;market&amp;rsquo; is already hopelessly polluted with toy blog engines, which is evidence for its suitability as a learning project.</description>
    </item>
    
    <item>
      <title>Go App, Do You Read Me?</title>
      <link>https://icub3d.github.io/post/go-app-do-you-read-me/</link>
      <pubDate>Thu, 17 Jan 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/go-app-do-you-read-me/</guid>
      <description>I am now running a few personal Go applications and am working on a Go web application that will eventually be ready for public consumption. Since Go gives us the ability to act as a FastCGI backend or a stand alone web application, it only seems reasonable that in a production system you&amp;rsquo;d want the ability to use it like any other web server. This includes the ability to reload the configuration on the fly and start and stop the application.</description>
    </item>
    
    <item>
      <title>Vim and Go</title>
      <link>https://icub3d.github.io/post/vim-and-go/</link>
      <pubDate>Wed, 09 Jan 2013 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/vim-and-go/</guid>
      <description>I grew up on Emacs and Bash. I love them dearly (I have the pinky fingers to prove it). I&amp;rsquo;m not so blinded by my faith in them though that I won&amp;rsquo;t occasionally try new things. I&amp;rsquo;ve heard a lot of good things about Zsh and I&amp;rsquo;ve found myself connecting to many a servers that have Vim installed but not Emacs. So, I thought I&amp;rsquo;d give them a try.
Of course, my new pet programming language is Go, so I thought I&amp;rsquo;d try and get some basic functionality for Go working with Vim.</description>
    </item>
    
    <item>
      <title>Private Git Repos And Go</title>
      <link>https://icub3d.github.io/post/private-git-repos-and-go/</link>
      <pubDate>Sun, 23 Dec 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/private-git-repos-and-go/</guid>
      <description>I spent a little bit of time this weekend tinkering on a small project I&amp;rsquo;ve been thinking about for quite a while. Google&amp;rsquo;s new(ish) language Go seemed like a good candidate for the project. One of the great features of Go is that your can import external code sources relatively easily. I have a small private repository at home and I wanted to simplify the process of importing the code and maintaining the repositories.</description>
    </item>
    
    <item>
      <title>America Is Falling For It</title>
      <link>https://icub3d.github.io/post/america-is-falling-for-it/</link>
      <pubDate>Tue, 23 Oct 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/america-is-falling-for-it/</guid>
      <description>I feel like this election has brought me some new insight. Our society has become completely focused on the one-liners, zingers, and memes. We hang tight on every word our favorite candidate says and belittle the other. This of course is what both sides want and we are falling for it.
Maybe I&amp;rsquo;m out there for thinking this, but 90% of what the two candidates believe are essentially the same. In order to make themselves stand apart they twist the fact, cherry-pick numbers, and toss out phrases for tomorrow&amp;rsquo;s Internet to gobble up.</description>
    </item>
    
    <item>
      <title>Every American Should See Wicked</title>
      <link>https://icub3d.github.io/post/every-american-should-see-wicked/</link>
      <pubDate>Sun, 12 Aug 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/every-american-should-see-wicked/</guid>
      <description>My wife and I went to see [Wicked](http://en.wikipedia.org/wiki/Wicked_(musical)) for the first time this weekend. While I&amp;rsquo;m not an avid theater goer, I can say that it is by far the best play I&amp;rsquo;ve seen. It made me laugh, it made me cry, and it made me think.
It&amp;rsquo;s the thinking part that I&amp;rsquo;m throwing out on this series of tubes because I think the moral of play is extremely important for our time.</description>
    </item>
    
    <item>
      <title>Determining Determinism</title>
      <link>https://icub3d.github.io/post/determining-determinism/</link>
      <pubDate>Fri, 03 Aug 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/determining-determinism/</guid>
      <description>I&amp;rsquo;ve always lived by the programming adage, &amp;ldquo;Get it working, then make it either readable or fast.&amp;rdquo; When you are developing games or other high performance applications, the making it fast part can consume a lot of your time.
I can&amp;rsquo;t count the number of hours I&amp;rsquo;ve spent looking at call graphs. What do you do when you&amp;rsquo;ve determined your bottleneck though? Most people start looking at common things like unraveling loops and recursion or creating look up tables (LUTs).</description>
    </item>
    
    <item>
      <title>Uphill Both Ways</title>
      <link>https://icub3d.github.io/post/uphill-both-ways/</link>
      <pubDate>Sun, 15 Jul 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/uphill-both-ways/</guid>
      <description>I have to say, JavaScript has come a long way. For some reason, I was reminded of my first JavaScript based website today. Back in my day&amp;hellip;Seriously though, this was twelve years ago. I designed a windowed system for my personal website and I was quite pleased with it.
It had a start menu at the bottom left of the browser. You would click on it and there would be a menu with links to my blog, pictures, resume, etc.</description>
    </item>
    
    <item>
      <title>Shave and a Haircut, Two Bits?!?</title>
      <link>https://icub3d.github.io/post/shave-and-haircut-two-bits/</link>
      <pubDate>Thu, 12 Jul 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/shave-and-haircut-two-bits/</guid>
      <description>If anyone has bought razor blades lately and not had steam come out of their ears after looking at the price, I commend you, independently wealthy person. For me, it&amp;rsquo;s always been a nagging issue. I have a rough beard and go through a cartridge every 7-10 days.
I spend about $15 per month on blades. I don&amp;rsquo;t spend $15 per month on all the rest of my personal hygiene. I blame part of this on the manufacturer.</description>
    </item>
    
    <item>
      <title>Honing Your Inner Command Line</title>
      <link>https://icub3d.github.io/post/honing-your-inner-command-line/</link>
      <pubDate>Wed, 27 Jun 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/honing-your-inner-command-line/</guid>
      <description>As a Linux enthusiast, I often find that there is just so much to learn that it can get overwhelming. The keyboard is by far still the fastest way to interact with a computer, but memorizing all of the shortcuts can be daunting.
When I was getting the hang of emacs, I thought it would be good to read a book to try and improve my skills. I quickly realized though that I was getting too much information at once to make it useful.</description>
    </item>
    
    <item>
      <title>Go Forth and Read</title>
      <link>https://icub3d.github.io/post/go-forth-and-read/</link>
      <pubDate>Sat, 23 Jun 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/go-forth-and-read/</guid>
      <description>I&amp;rsquo;ve been diving into the Go language at full speed. A book was recently released called Programming in Go. If you are interested in Go and this isn&amp;rsquo;t your first language, I&amp;rsquo;d definitely recommend it. It goes much deeper into the language than the examples online and provides a nice layout for learning and discovery. Not that I hate reading the package docs, but the book provides it in a more interesting and concise layout.</description>
    </item>
    
    <item>
      <title>Go, Go, Go, Go On An Adventure</title>
      <link>https://icub3d.github.io/post/go-on-an-adventure/</link>
      <pubDate>Tue, 19 Jun 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/go-on-an-adventure/</guid>
      <description>I&amp;rsquo;ve been having a lot of fun playing with Google&amp;rsquo;s new language [Go](http://golang.org/. I just finished A Tour of Go as well as their references: How to Write Go Code and Effective Go. Some of the exercises in the tour were quite fun to implement. You can find my answers in gist. Feedback is welcomed!
The built in concurrency was the most fascinating for me. I was surprised at how simple the last problem (WebCrawler.</description>
    </item>
    
    <item>
      <title>Look Ma! I&#39;m Melding!</title>
      <link>https://icub3d.github.io/post/look-my-im-melding/</link>
      <pubDate>Sun, 17 Jun 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/look-my-im-melding/</guid>
      <description>Software engineers love their tools. People generally regret asking questions like &amp;ldquo;Should I user emacs or vi?&amp;rdquo; because of the devotion we put into the tools we use. It&amp;rsquo;s borderline religious. If you aren&amp;rsquo;t on their side, you are dead to them.
Given that, I still wanted share one of my favorite tools: Meld. Meld is a visual diff tool. It allows you to compare files and directories and see what is different about them.</description>
    </item>
    
    <item>
      <title>Chinese Character Rendering In Chromium</title>
      <link>https://icub3d.github.io/post/chinese-chars-in-chromium/</link>
      <pubDate>Sat, 16 Jun 2012 13:32:09 -0600</pubDate>
      
      <guid>https://icub3d.github.io/post/chinese-chars-in-chromium/</guid>
      <description>I&amp;rsquo;ve been using Arch Linux for a month now and have really been enjoying it. It&amp;rsquo;s one of those &amp;ldquo;Google and tinker&amp;rdquo; operating systems. Today I had a problem with Chromium refusing to render Chinese characters. I don&amp;rsquo;t speak Chinese, but It bugs me to see boxes where cool characters should be.
It turns out to be a simple fix. Installing the package ttf-arphic-uming did it for me. I thought I&amp;rsquo;d just throw this out there just in case anyone else was getting infuriated by ugly rectangles.</description>
    </item>
    
  </channel>
</rss>